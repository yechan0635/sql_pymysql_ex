-- ============================================================
-- E-Commerce Database - Sample Data for JOIN Practice
-- JOIN 실습을 위한 샘플 데이터
-- ============================================================

USE ecommerce_db;

-- 기존 데이터 삭제 (테스트용)
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE reviews;
TRUNCATE TABLE wishlist;
TRUNCATE TABLE order_items;
TRUNCATE TABLE orders;
TRUNCATE TABLE products;
TRUNCATE TABLE customers;
SET FOREIGN_KEY_CHECKS = 1;


-- ============================================================
-- 1. CUSTOMERS 데이터 (15명)
-- ============================================================
INSERT INTO customers (customer_name, customer_email, customer_phone) VALUES
('김민수', 'minsu.kim@example.com', '010-1111-2222'),
('이영희', 'younghee.lee@example.com', '010-2222-3333'),
('박철수', 'chulsoo.park@example.com', '010-3333-4444'),
('최지은', 'jieun.choi@example.com', '010-4444-5555'),
('홍길동', 'gildong.hong@example.com', '010-5555-6666'),
('강민지', 'minji.kang@example.com', '010-6666-7777'),
('윤서준', 'seojun.yoon@example.com', '010-7777-8888'),
('정하영', 'hayoung.jung@example.com', '010-8888-9999'),
('조은우', 'eunwoo.cho@example.com', '010-9999-0000'),
('신지훈', 'jihoon.shin@example.com', '010-0000-1111'),
('한서연', 'seoyeon.han@example.com', '010-1234-5678'),
('오준영', 'junyoung.oh@example.com', '010-2345-6789'),
('임다은', 'daeun.lim@example.com', '010-3456-7890'),
('백지우', 'jiwoo.baek@example.com', '010-4567-8901'),
('송현우', 'hyunwoo.song@example.com', '010-5678-9012');


-- ============================================================
-- 2. PRODUCTS 데이터 (20개)
-- ============================================================
INSERT INTO products (product_name, product_category, product_price, stock_quantity) VALUES
-- 컴퓨터/주변기기 (5개)
('무선마우스', '컴퓨터/주변기기', 25000, 150),
('기계식키보드', '컴퓨터/주변기기', 89000, 80),
('게이밍마우스', '컴퓨터/주변기기', 65000, 100),
('USB허브', '컴퓨터/주변기기', 15000, 200),
('웹캠', '컴퓨터/주변기기', 45000, 120),

-- 음향기기 (4개)
('블루투스이어폰', '음향기기', 57000, 95),
('노이즈캔슬링헤드폰', '음향기기', 189000, 60),
('스피커', '음향기기', 78000, 85),
('마이크', '음향기기', 42000, 110),

-- 모바일액세서리 (4개)
('휴대용보조배터리', '모바일액세서리', 32000, 180),
('고속충전케이블', '모바일액세서리', 12000, 250),
('핸드폰케이스', '모바일액세서리', 18000, 200),
('무선충전패드', '모바일액세서리', 28000, 140),

-- 가방/잡화 (4개)
('노트북가방', '가방/잡화', 45000, 90),
('크로스백', '가방/잡화', 38000, 105),
('백팩', '가방/잡화', 55000, 75),
('파우치', '가방/잡화', 15000, 160),

-- 생활용품 (3개)
('텀블러', '생활용품', 22000, 145),
('휴대용선풍기', '생활용품', 18000, 130),
('블루투스체중계', '생활용품', 35000, 95);


-- ============================================================
-- 3. ORDERS 데이터 (30개 주문)
-- ============================================================
INSERT INTO orders (order_date, customer_id, shipping_address, billing_address, payment_method, payment_txn_id, order_status) VALUES
-- 2024년 주문들
('2024-11-15', 1, '서울특별시 강남구 테헤란로 10', '서울특별시 강남구 테헤란로 10', 'Card', 'TXN2024111501', 'Delivered'),
('2024-11-18', 2, '부산광역시 해운대구 해변로 50', '부산광역시 해운대구 해변로 50', 'KakaoPay', 'TXN2024111801', 'Delivered'),
('2024-11-20', 3, '대구광역시 중구 중앙대로 100', '대구광역시 중구 중앙대로 100', 'NaverPay', 'TXN2024112001', 'Delivered'),
('2024-11-22', 4, '인천광역시 남동구 인주대로 200', '인천광역시 남동구 인주대로 200', 'TossPay', 'TXN2024112201', 'Delivered'),
('2024-11-25', 5, '서울특별시 마포구 연남로 5', '서울특별시 마포구 연남로 5', 'Card', 'TXN2024112501', 'Delivered'),
('2024-11-28', 1, '서울특별시 강남구 테헤란로 10', '서울특별시 강남구 테헤란로 10', 'Payco', 'TXN2024112801', 'Delivered'),
('2024-12-01', 6, '광주광역시 서구 상무대로 20', '광주광역시 서구 상무대로 20', 'Card', 'TXN2024120101', 'Delivered'),
('2024-12-03', 7, '대전광역시 유성구 대학로 30', '대전광역시 유성구 대학로 30', 'BankTransfer', 'TXN2024120301', 'Delivered'),
('2024-12-05', 2, '부산광역시 해운대구 해변로 50', '부산광역시 해운대구 해변로 50', 'KakaoPay', 'TXN2024120501', 'Delivered'),
('2024-12-08', 8, '울산광역시 남구 삼산로 40', '울산광역시 남구 삼산로 40', 'NaverPay', 'TXN2024120801', 'Delivered'),

-- 2025년 1월 주문들
('2025-01-05', 9, '경기도 수원시 영통구 광교로 50', '경기도 수원시 영통구 광교로 50', 'Card', 'TXN2025010501', 'Delivered'),
('2025-01-08', 3, '대구광역시 중구 중앙대로 100', '대구광역시 중구 중앙대로 100', 'TossPay', 'TXN2025010801', 'Delivered'),
('2025-01-10', 10, '경기도 성남시 분당구 정자로 60', '경기도 성남시 분당구 정자로 60', 'Payco', 'TXN2025011001', 'Delivered'),
('2025-01-12', 4, '인천광역시 남동구 인주대로 200', '인천광역시 남동구 인주대로 200', 'Card', 'TXN2025011201', 'Delivered'),
('2025-01-15', 11, '서울특별시 송파구 올림픽로 70', '서울특별시 송파구 올림픽로 70', 'KakaoPay', 'TXN2025011501', 'Delivered'),

-- 2025년 2-3월 주문들
('2025-02-01', 1, '서울특별시 강남구 테헤란로 10', '서울특별시 강남구 테헤란로 10', 'Card', 'TXN2025020101', 'Delivered'),
('2025-02-05', 12, '서울특별시 강서구 공항대로 80', '서울특별시 강서구 공항대로 80', 'NaverPay', 'TXN2025020501', 'Shipped'),
('2025-02-10', 5, '서울특별시 마포구 연남로 5', '서울특별시 마포구 연남로 5', 'BankTransfer', 'TXN2025021001', 'Shipped'),
('2025-02-15', 13, '경기도 고양시 일산동구 중앙로 90', '경기도 고양시 일산동구 중앙로 90', 'Card', 'TXN2025021501', 'Shipped'),
('2025-03-01', 2, '부산광역시 해운대구 해변로 50', '부산광역시 해운대구 해변로 50', 'Payco', 'TXN2025030101', 'Confirmed'),
('2025-03-05', 14, '서울특별시 용산구 이태원로 100', '서울특별시 용산구 이태원로 100', 'TossPay', 'TXN2025030501', 'Confirmed'),

-- 최근 주문들 (3월-10월)
('2025-03-10', 6, '광주광역시 서구 상무대로 20', '광주광역시 서구 상무대로 20', 'Card', 'TXN2025031001', 'Processing'),
('2025-04-15', 15, '경기도 안양시 동안구 평촌대로 110', '경기도 안양시 동안구 평촌대로 110', 'KakaoPay', 'TXN2025041501', 'Processing'),
('2025-05-20', 7, '대전광역시 유성구 대학로 30', '대전광역시 유성구 대학로 30', 'NaverPay', 'TXN2025052001', 'Processing'),
('2025-06-10', 8, '울산광역시 남구 삼산로 40', '울산광역시 남구 삼산로 40', 'Card', 'TXN2025061001', 'Processing'),
('2025-07-05', 9, '경기도 수원시 영통구 광교로 50', '경기도 수원시 영통구 광교로 50', 'BankTransfer', 'TXN2025070501', 'Processing'),
('2025-08-12', 10, '경기도 성남시 분당구 정자로 60', '경기도 성남시 분당구 정자로 60', 'Payco', 'TXN2025081201', 'Cancelled'),
('2025-09-08', 3, '대구광역시 중구 중앙대로 100', '대구광역시 중구 중앙대로 100', 'Card', 'TXN2025090801', 'Cancelled'),
('2025-10-01', 11, '서울특별시 송파구 올림픽로 70', '서울특별시 송파구 올림픽로 70', 'TossPay', 'TXN2025100101', 'Processing'),
('2025-10-15', 4, '인천광역시 남동구 인주대로 200', '인천광역시 남동구 인주대로 200', 'KakaoPay', 'TXN2025101501', 'Processing');


-- ============================================================
-- 4. ORDER_ITEMS 데이터 (각 주문당 1-4개 상품)
-- ============================================================
INSERT INTO order_items (order_id, product_id, quantity, unit_price, discount) VALUES
-- 주문 1
(1, 1, 2, 25000, 0),
(1, 2, 1, 89000, 5000),

-- 주문 2
(2, 6, 1, 57000, 0),
(2, 14, 1, 45000, 3000),

-- 주문 3
(3, 3, 1, 65000, 0),
(3, 5, 1, 45000, 0),
(3, 18, 2, 22000, 0),

-- 주문 4
(4, 10, 2, 32000, 2000),
(4, 11, 3, 12000, 0),

-- 주문 5
(5, 7, 1, 189000, 10000),

-- 주문 6
(6, 4, 2, 15000, 0),
(6, 12, 1, 18000, 0),

-- 주문 7
(7, 15, 1, 38000, 0),
(7, 19, 1, 18000, 0),

-- 주문 8
(8, 2, 1, 89000, 8000),
(8, 9, 1, 42000, 0),

-- 주문 9
(9, 1, 1, 25000, 0),
(9, 13, 1, 28000, 2000),
(9, 20, 1, 35000, 0),

-- 주문 10
(10, 8, 1, 78000, 5000),
(10, 17, 1, 15000, 0),

-- 주문 11
(11, 16, 1, 55000, 0),
(11, 10, 1, 32000, 0),

-- 주문 12
(12, 6, 2, 57000, 5000),

-- 주문 13
(13, 3, 1, 65000, 3000),
(13, 11, 2, 12000, 0),

-- 주문 14
(14, 14, 1, 45000, 0),
(14, 18, 1, 22000, 0),

-- 주문 15
(15, 7, 1, 189000, 15000),
(15, 12, 2, 18000, 0),

-- 주문 16
(16, 1, 3, 25000, 5000),
(16, 4, 1, 15000, 0),

-- 주문 17
(17, 5, 1, 45000, 0),
(17, 9, 1, 42000, 3000),

-- 주문 18
(18, 2, 1, 89000, 0),
(18, 19, 2, 18000, 0),

-- 주문 19
(19, 15, 1, 38000, 2000),
(19, 20, 1, 35000, 0),

-- 주문 20
(20, 8, 1, 78000, 0),
(20, 13, 1, 28000, 0),

-- 주문 21
(21, 16, 1, 55000, 5000),
(21, 17, 2, 15000, 0),

-- 주문 22
(22, 10, 3, 32000, 8000),

-- 주문 23
(23, 3, 1, 65000, 0),
(23, 6, 1, 57000, 0),

-- 주문 24
(24, 11, 5, 12000, 5000),
(24, 12, 2, 18000, 0),

-- 주문 25
(25, 7, 1, 189000, 0),

-- 주문 26
(26, 1, 2, 25000, 0),
(26, 14, 1, 45000, 3000),

-- 주문 27
(27, 2, 1, 89000, 10000),

-- 주문 28
(28, 5, 1, 45000, 0),
(28, 18, 1, 22000, 0),

-- 주문 29
(29, 4, 3, 15000, 0),
(29, 19, 1, 18000, 0),

-- 주문 30
(30, 20, 2, 35000, 5000);


-- ============================================================
-- 5. REVIEWS 데이터 (배송 완료된 주문 중 일부)
-- ============================================================
INSERT INTO reviews (order_id, product_id, customer_id, review_rating, review_comment, is_verified, helpful_count) VALUES
-- 긍정적 리뷰
(1, 1, 1, 5, '가성비 최고입니다! 무선 연결도 끊김 없고 배터리도 오래가요.', TRUE, 15),
(1, 2, 1, 4, '타건감은 좋은데 조금 시끄러워요. 그래도 만족합니다.', TRUE, 8),
(2, 6, 2, 5, '음질이 정말 좋아요. 노이즈캔슬링 기능도 훌륭합니다!', TRUE, 23),
(3, 3, 3, 5, '게이밍용으로 구매했는데 반응속도가 정말 빨라요.', TRUE, 12),
(4, 10, 4, 4, '용량도 크고 휴대하기 편해요. 여행 필수품!', TRUE, 7),
(5, 7, 5, 5, '최고의 헤드폰입니다. 음악 감상이 즐거워졌어요.', TRUE, 31),
(6, 4, 1, 5, '포트가 많아서 편리하게 사용하고 있습니다.', TRUE, 5),
(7, 15, 6, 4, '디자인도 예쁘고 수납공간도 넉넉해요.', TRUE, 9),

-- 보통 리뷰
(8, 2, 7, 3, '제품은 괜찮은데 배송이 좀 느렸어요.', TRUE, 4),
(9, 1, 2, 3, '무난한 제품입니다. 특별히 장단점은 없네요.', TRUE, 2),
(10, 8, 8, 4, '음질은 좋은데 무게가 조금 있어요.', TRUE, 6),
(11, 16, 9, 4, '수납공간이 많고 튼튼해 보여요.', TRUE, 8),
(12, 6, 3, 3, '가격대비 괜찮습니다. 배터리 시간이 좀 짧아요.', TRUE, 3),

-- 부정적 리뷰
(13, 3, 10, 2, '생각보다 DPI 조절이 불편해요. 교환하고 싶네요.', TRUE, 11),
(14, 14, 4, 2, '재질이 생각보다 약해보입니다.', TRUE, 5),

-- 최근 리뷰
(15, 7, 11, 5, '완벽한 제품! 강력 추천합니다!!', TRUE, 19),
(16, 1, 1, 5, '세 번째 구매인데 여전히 만족스럽습니다.', TRUE, 7),
(2, 14, 2, 4, '노트북 보호가 잘 되는 것 같아요.', TRUE, 4),
(9, 13, 2, 5, '무선충전이 정말 편리해요!', TRUE, 10),
(11, 10, 9, 4, '여행갈 때 항상 챙겨가요. 유용합니다.', TRUE, 6);


-- ============================================================
-- 6. WISHLIST 데이터 (고객들의 위시리스트)
-- ============================================================
INSERT INTO wishlist (customer_id, product_id) VALUES
-- 고객 1의 위시리스트
(1, 7),
(1, 16),

-- 고객 2의 위시리스트
(2, 2),
(2, 8),
(2, 19),

-- 고객 3의 위시리스트
(3, 5),
(3, 10),

-- 고객 4의 위시리스트
(4, 7),
(4, 15),
(4, 20),

-- 고객 5의 위시리스트
(5, 3),

-- 고객 6의 위시리스트
(6, 6),
(6, 9),

-- 고객 7의 위시리스트
(7, 16),
(7, 17),

-- 고객 8의 위시리스트
(8, 1),
(8, 11),
(8, 12),

-- 고객 9의 위시리스트
(9, 7),

-- 고객 10의 위시리스트
(10, 2),
(10, 5),

-- 고객 11-15의 위시리스트
(11, 8),
(11, 13),
(12, 14),
(13, 18),
(13, 19),
(14, 20),
(15, 3),
(15, 6);


-- ============================================================
-- 데이터 확인 쿼리
-- ============================================================

-- 테이블별 레코드 수 확인
SELECT 'customers' AS table_name, COUNT(*) AS record_count FROM customers
UNION ALL
SELECT 'products', COUNT(*) FROM products
UNION ALL
SELECT 'orders', COUNT(*) FROM orders
UNION ALL
SELECT 'order_items', COUNT(*) FROM order_items
UNION ALL
SELECT 'reviews', COUNT(*) FROM reviews
UNION ALL
SELECT 'wishlist', COUNT(*) FROM wishlist;

-- 주문 상태별 통계
SELECT 
    order_status,
    COUNT(*) AS order_count,
    SUM(total_amount) AS total_revenue
FROM orders
GROUP BY order_status
ORDER BY order_count DESC;

-- 제품 카테고리별 통계
SELECT 
    product_category,
    COUNT(*) AS product_count,
    AVG(product_price) AS avg_price,
    SUM(stock_quantity) AS total_stock
FROM products
GROUP BY product_category;


-- ============================================================
-- 샘플 데이터 요약
-- ============================================================

/*
📊 생성된 데이터:

✅ Customers: 15명
   - 다양한 지역의 고객
   - 실제 한국 이름과 이메일

✅ Products: 20개
   - 5개 카테고리
   - 12,000원 ~ 189,000원 가격대
   - 재고 수량 포함

✅ Orders: 30개
   - 2024년 11월 ~ 2025년 10월
   - 다양한 주문 상태 (Delivered, Shipped, Processing, Cancelled)
   - 6가지 결제 수단

✅ Order_Items: 60개
   - 각 주문당 1-4개 상품
   - 할인 금액 포함
   - 자동 계산된 소계

✅ Reviews: 19개
   - 평점 2-5점
   - 상세한 리뷰 코멘트
   - 도움이 됨 카운트

✅ Wishlist: 27개
   - 고객별 관심 상품
   - 다양한 제품 분포

🎯 JOIN 실습에 최적화된 데이터셋:
- 모든 관계(1:N, N:M)를 포함
- NULL 값이 있는 LEFT JOIN 실습 가능
- 집계 함수 실습 가능
- 서브쿼리 실습 가능
- 복잡한 비즈니스 쿼리 실습 가능
*/
